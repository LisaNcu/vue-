{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/globalApi.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// const cname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]`\r\n// const qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// const startTagOpen = new RegExp(`^<${qnameCapture}`);\r\nconst ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配到的分组是一个 标签名<xxxx> 开始标签\r\n// const endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配 结束标签 </xxx>\r\n// const attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性 color=\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\n\r\n// vue3不是正则\r\n\r\n// 树\r\n//{\r\n//     tag: 'div',\r\n//     type: 1,\r\n//     arrts: [{name}],\r\n//     children: [{}]\r\n// }\r\n\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [] // 用来存放元素的栈\r\n    let currentParent; // 指向栈中的最后一个\r\n    let root;\r\n\r\n    // 最终要转换成一颗语法树\r\n\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    // 利用栈型结构来构造一棵树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs); // 创造一个ast节点\r\n        if (!root) { // 看一下是否是空树\r\n            root = node; // 如果为空则当前是树的根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node);\r\n        currentParent = node; // currentParent为栈中的最后\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点\r\n        text = text.replace(/\\s/g,'')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end(tag) {\r\n        let node = stack.pop(); // 弹出最后一个，检验标签是否合法\r\n        currentParent = stack[stack.length-1]\r\n    }\r\n    // 不停地匹配不停删除\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    while (html) {\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd === 0) { // 开始标签\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag); // 解析标签\r\n            if (endTagMatch) {\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length);\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd).replace('\\n', ''); // 解析本文\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length);\r\n            }\r\n            //break;\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from \"./parse\"\r\n\r\nfunction genProps(attrs) {\r\n    let str = '';\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => { // qs 库\r\n                let [key, value] = item.split(':');\r\n                key = key.replace(/\\s/g,'');\r\n                value = value.replace(/\\s/g,'')\r\n                obj[key] = value;\r\n            })\r\n            // console.log('obj', obj)\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配表达式变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match;\r\n            // 使用exec，且正则里面有全局匹配g，会记录位置\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                let index = match.index // 匹配的位置\r\n                if (index > lastIndex) {\r\n                    tokens.push(text.slice(lastIndex, index))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(text.slice(lastIndex))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction genChildren(el) {\r\n    const children = el.children;\r\n    if (children) {\r\n        return children.map(child=>gen(child)).join(',')\r\n    }\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast)\r\n    let code = (`_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ ast.children.length ? `,${children}`:''\r\n        }\r\n        )`)\r\n    // console.log('code', code)\r\n    return code\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(templete) {\r\n    // 1、将template 转化为ast语法树\r\n    let ast = parseHTML(templete)\r\n   // console.log(ast)\r\n    // 2、生成render函数 （render方法执行后的返回的结果就是虚拟 dom）\r\n    // render(h) {\r\n    //     return h('div', {id: 'app'})\r\n    // }\r\n\r\n    // 模板引擎的实现原理 就是 with + new Function\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code); // 根据代码生成render函数\r\n    // console.log('render', render.toString())\r\n    return render;\r\n}","const strats = {};\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach((hook) => {\r\n    strats[hook] = function (p, c) {\r\n        if (c) { // 儿子有\r\n            if (p) { // 父亲有\r\n                return p.concat(c)\r\n            } else { // 父亲没有\r\n                return [c];\r\n            }\r\n        } else { //儿子没有\r\n            return p;\r\n        }\r\n    }\r\n})\r\n\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n\r\n    for (let key in parent) {\r\n        mergeField(key)\r\n    }\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n\r\n    function mergeField(key) {\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key] // 优先采用儿子，再采用父亲\r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalApi(Vue) {debugger\r\n    Vue.options = {}\r\n    Vue.mixin = function (mixin) {\r\n        // 将用户的选项和全局的options进行合并  \r\n        this.options = mergeOptions(this.options, mixin);\r\n        //console.log('this.options', this.options)\r\n        return this;\r\n    }\r\n}","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n\r\n        this.id = id++; // 属性dep手机watcher\r\n        this.sub = []; // 存放当前属性对应的watcher有哪些\r\n\r\n\r\n    }\r\n    depend() {\r\n        // 不希望放重复的watcher\r\n        // this.subs.push(Dep.target)\r\n\r\n        Dep.target.addDep(this);\r\n    }\r\n    addSub(watcher) {\r\n        this.sub.push(watcher)\r\n    }\r\n    notify() {\r\n        this.sub.forEach(watcher => {\r\n            watcher.update(); // 告诉watcher更新\r\n        });\r\n    }\r\n}\r\nDep.target = null;\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\n\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\n\r\nexport default Dep;","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1)当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\r\n// 2)调用render 会取值到get上\r\n// 每个属性都有一个dep（属性是被观察者）， watcher就是观察者（属性变化了会通知观察者来更新）--》观察者模式\r\nclass Watcher { // 不同组件有不同的watcher new watcher，实现了局部渲染\r\n    constructor(vm, exprOrFn, options, cb) {\r\n        this.id = id++;\r\n        this.renderWatcher = options; // 是一个渲染watcher\r\n\r\n        if (typeof exprOrFn === 'string') {\r\n            this.getter = function () {\r\n                return vm[exprOrFn] // vm.firstname\r\n            }\r\n        } else {\r\n            this.getter = exprOrFn\r\n        }\r\n\r\n        this.deps = []; // 后续实现计算属性，和一些清理工作需要用到\r\n        // this.getter = fn; // 调用这个函数可以发生取值操作\r\n        this.depsId = new Set();\r\n        this.cb = cb;\r\n        this.lazy = options.lazy;\r\n        this.dirty = this.lazy; // 缓存值\r\n       \r\n        // this.get()\r\n        this.vm = vm;\r\n        this.user = options.user // 标识是否是用户自己的\r\n        \r\n        this.value =  this.lazy ? undefined : this.get(); // 有lazy不执行get\r\n    }\r\n    addDep(dep) { // 一个组件对应着多个属性 重复的属性也不用记录\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this); // watcher 已经记住了dep了而且去重了，此时让dep也记住watcher\r\n        }\r\n    }\r\n    evaluate() {\r\n        this.value = this.get(); // 获取到用户函数的返回值，并且还要标识为脏\r\n        this.dirty = false;\r\n    }\r\n    get() {\r\n        //Dep.target = this; // 静态属性只有一份\r\n        pushTarget(this);\r\n        let value = this.getter.call(this.vm);\r\n        //Dep.target = null; // 渲染完情况\r\n        popTarget()\r\n        return value;\r\n    }\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while (i--) {\r\n            this.deps[i].depend() // 让计算属性watcher也收集渲染watcher\r\n        }\r\n    }\r\n    update() {\r\n        //debugger\r\n        if (this.lazy) {\r\n            // 如果是计算属性 依赖的值变化了，就标识计算属性是脏值了\r\n            this.dirty = true\r\n        } else {\r\n            queueWatcher(this); // 把当前的watcher暂存起来\r\n            // this.get(); // 重新渲染\r\n        }\r\n    }\r\n\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get(); // 渲染的时候用的是最新的vm来渲染的\r\n\r\n        if (this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue)\r\n        }\r\n    }\r\n}\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    //debugger\r\n    let flushQueue = queue.slice(0);\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    flushQueue.forEach(q => q.run());\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if (!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        console.log(queue)\r\n        // 不管update执行多少次，最终只执行一轮刷新操作\r\n\r\n        if (!pending) {\r\n            // setTimeout(flushSchedulerQueue, 0);\r\n            nextTick(flushSchedulerQueue, 0);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    //debugger\r\n    waiting = false;\r\n    let cbs = callbacks.slice(0);\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb()); // 按照顺序依次执行\r\n}\r\n// 没有直接使用api，而是采用优雅降级的方式\r\n// 内部先采用promise（ie不兼容）--> MutationObserver--> ie专享的setImmediate setTimeout\r\n\r\nlet timerFunc;\r\nif (Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n}\r\n// else if (MutationObserver) {\r\n//     let observe = new MutationObserver(flushCallbacks)\r\n//     let textnode = document.createTextNode(1);\r\n//     observe.observe(textnode, {\r\n//         characterData:true\r\n//     })\r\n//     timerFunc = () => {\r\n//         textnode.textContent = 2;\r\n//     }\r\n// } else if (setImmediate) {\r\n//     timerFunc = () => {\r\n//         setImmediate(flushCallbacks)\r\n//     }\r\n// } else {\r\n//     timerFunc = () => {\r\n//         setTimeout(flushCallbacks)\r\n//     }\r\n// }\r\nexport function nextTick(cb) {\r\n    //debugger\r\n    callbacks.push(cb); // 维护nextTick中的callback方法\r\n    if (!waiting) {\r\n        //setTimeout(()=>{\r\n        //  flushCallbacks(); // 最后一起刷新\r\n        timerFunc()\r\n        //},0)\r\n        waiting = true;\r\n    }\r\n}\r\n\r\n\r\n\r\n// 需要给每一个属性增加一个dep，目的就是收集watcher\r\n// 一个视图中 有多少个属性（n个属性对应一个视图，n个dep对应一个watcher）\r\n// 一个属性对应多个视图\r\n// 多对多的关系\r\nexport default Watcher","// h() c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.kye\r\n    }\r\n    return vnode(vm,tag, key, data, children)\r\n}\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast做的是语法层面的转化，他描述的是语法本身（可以描述js css html）\r\n// 我们的虚拟dom是描述的dom元素，可以增加一些自定义属性（描述dom）\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        // 插槽 指令...\r\n    }\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}","import { isSameVnode } from \".\";\r\n\r\nexport function createElm(vnode) {\r\n    let {tag , data, children, text } = vnode;\r\n    if (typeof tag === 'string') { // 标签\r\n        vnode.el = document.createElement(tag) // 这里将真实节点和虚拟节点对应起来，如果后续修改属性了\r\n        \r\n        patchProps(vnode.el, data) // 更新\r\n\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        });\r\n    } else {\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\nexport function patchProps(el, props) {\r\n    for (let key in props) {\r\n        if(key === 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVnode, vnode) {\r\n    // 写的出渲染\r\n    // console.log('oldVnode', oldVnode);\r\n    // console.log('vnode',vnode)\r\n    const isRealElement = oldVnode.nodeType;\r\n    if (isRealElement) {\r\n        const elm = oldVnode; // 获取真实元素\r\n        const parentElm = elm.parentNode; // 拿到父元素\r\n        let newEle = createElm(vnode);\r\n        // console.log('newEle', newEle)\r\n        parentElm.insertBefore(newEle, elm.nextSibling);\r\n        parentElm.removeChild(elm);\r\n        return newEle;\r\n    } else {\r\n        // diff 算法\r\n        // 1、两个节点不是同一个节点，直接删除老的，换上新的\r\n        // 2、两个节点是同一个节点（判断节点的tag和节点的key）比较两个节点的属性是否有差异（复用老的节点）\r\n        // 3、节点比较完毕后就需要比较两人的儿子\r\n        \r\n        if (!isSameVnode(oldVnode, vnode)) {\r\n            // 用老节点的父亲 进行替换\r\n            oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el)\r\n        }\r\n        console.log(oldVnode, vnode);\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\"\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vnode) { // 将vnode转化为真实dom\r\n        // console.log('update', vnode)\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        vm.$el = patch(el, vnode); // patch既有初始化功能，又有更新的功能\r\n\r\n    }\r\n    Vue.prototype._c = function() {\r\n       return createElementVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function(value) {\r\n        if (typeof value != 'object') return value;\r\n        return JSON.stringify(value);\r\n        // console.log(JSON.stringify(value))\r\n    }\r\n    Vue.prototype._render = function() {\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n        return this.$options.render.call(this); // 通过ast语法转移后生成的render方法\r\n\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el;// 这里的el 是通过querySelector处理过的\r\n    // 1、调用render方法产生虚拟节点 dom\r\n\r\n    //vm._render(); // vm.$option.render() // 虚拟节点\r\n\r\n    const updateComponent = ()=> {\r\n        vm._update(vm._render())\r\n    }\r\n    new Watcher(vm, updateComponent, true) // true用于标识是一个渲染watcher\r\n    // 2、根据虚拟dom产生真实dom\r\n    // vm._update(vm._render())\r\n    // 3、插入到el元素中\r\n}\r\n\r\n// vue核心原理 1）创造了响应式数据\r\n// 2)模板转换成ast虚拟书\r\n// 3) 将ast语法树转换成render函数\r\n// 4) 后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\r\n\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的dom\r\n\r\n\r\nexport function callHook(vm, hook) { // 调用钩子函数\r\n    const handlers = vm.$options[hook];\r\n    if (handlers) {\r\n        handlers.forEach(handler => handler.call(vm))\r\n    }\r\n}","import Dep from \"./dep\"\r\n\r\nclass Observe {\r\n    constructor(data) {\r\n        // Object.defineProperty 只能劫持已经存在的属性。新增的删除的就触发，vue为此会但单独写一些api\r\n        this.walk(data)\r\n    }\r\n    walk(data) { // 循环对象，对属性一次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n\r\n    }\r\n}\r\nexport function defineReactive(target, key ,value) { //闭包 属性劫持\r\n   // debugger\r\n   observe(value) // 递归 劫持属性\r\n   let dep = new Dep(); // 每一个属性都有一个dep\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值调用\r\n           // console.log('取值', dep, key)\r\n\r\n            if (Dep.target) {\r\n                dep.depend(); // 让这个属性的收集器记住这个watcher\r\n            }\r\n\r\n            return value\r\n        },\r\n        set(newValue) { // 修改的时候，会执行set\r\n            // console.log('设置值')\r\n            if(newValue === value) return\r\n            observe(value)\r\n            value = newValue;\r\n            dep.notify();//通知组件更新\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    // 对data对象进行劫持\r\n    if (typeof data !== 'object' || data == null) {\r\n        return;\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，则不需要再被劫持，判断一个对象是否被劫持，可以增加一个实例，用实例来判断是否被劫持贵哦\r\n    return new Observe(data)\r\n}","import Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from './observe/watcher'\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options // 获取所有选项\r\n    // if(opts.props) {\r\n    //     initData();\r\n    // }\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n\r\n    // 初始化computed\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    //console.log('watch', watch)\r\n\r\n    for (let key in watch) { // 字符串 数组 函数\r\n        const handler = watch[key]\r\n        if (Array.isArray(handler)) {\r\n            for (let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i])\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n    // 字符串 函数 对象\r\n\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key, handler);\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\nexport function initData(vm) {\r\n    // data函数、对象。vue3里面觉得data就是个函数\r\n    let data = vm.$options.data;\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    vm._data = data;\r\n    // 对数据进行劫持\r\n    observe(data)\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    //console.log('computed', computed)\r\n    // const watchers = {}\r\n    const watchers = vm._computedWatchers = {} // 将计算属性watcher保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key];\r\n        // 我们需要监控 计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get;\r\n        // 直接new 会立即执行fn，所以加lazy标识一下，将属性和watcher对应起来\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true });\r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n    const getter = typeof userDef === \"function\" ? userDef : userDef.get;\r\n    const setter = userDef.set || (() => { })\r\n\r\n    // 可以根据实例拿到对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n    // 我们需要检测是否要执行这个getter\r\n    return function () {\r\n        const watcher = this._computedWatchers[key]; // 获取到对应属性的watcher\r\n        if (watcher.dirty) {\r\n            // 如果是脏的，就去执行用户传入的函数\r\n            watcher.evaluate() // 求值后dirty变为false\r\n        }\r\n        if (Dep.target) {\r\n            // 计算属性出栈后，还要渲染watcher，应该让计算属性watcher里面的属性依赖也去收集上一层watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value; // 返回watcher上的\r\n    }\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick\r\n    // 最终调用的方法\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {\r\n        //console.log(exprOrFn, cb)\r\n        // firsetname的值变化了，直接执行cb函数\r\n        new Watcher(this, exprOrFn, { user: true }, cb)\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n       // 以$开头的是vue自己的东西 $data\r\n       const vm = this;\r\n       // vm.$options = options //用户选项挂在到实例上\r\n       // 定义的全局指令过滤器...都会挂载到实例上\r\n       vm.$options = mergeOptions(this.constructor.options,options)\r\n       //console.log('vm.$options',vm.$options)\r\n       // 初始化状态 watch created\r\n       //initState(vm);\r\n       \r\n       callHook(vm, 'beforeCreate')\r\n\r\n       initState(vm)\r\n\r\n       callHook(vm, 'created')\r\n\r\n       // todo 编译 虚拟dom\r\n       if(options.el) {\r\n            vm.$mount(options.el) // 实现数据的挂载\r\n       }\r\n    }\r\n    Vue.prototype.$mount = function(el) {debugger\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if(!ops.render) { // 先进行查找有没有render函数\r\n            let templete;// 没有render看一下是否写了templete\r\n            if (!ops.templete && el) { // 没有写模板，但是写了le\r\n                templete = el.outerHTML // 写了templete，就用写了的templete\r\n            } else {\r\n                if(el) {\r\n                    templete = ops.templete\r\n                }\r\n            }\r\n            if (templete) { // 对模板进行编译\r\n                const render = compileToFunction(templete);\r\n                ops.render = render; // jsx 最终会被编译成h('xx')\r\n            }\r\n        }\r\n\r\n        mountComponent(vm, el); // 组件的挂载\r\n\r\n        //console.log('ops.render', ops.render); // 最终可以获取render方法\r\n\r\n\r\n\r\n        // script 标签引用的vue.global.js这个编译过程是在浏览器运行对的\r\n        // runtime是不包含模板编译的，整个编译时打包的时候通过loader来转移.vue文件的，用runtime的时候不能使用templete\r\n    }\r\n}\r\n// function initState(vm) {\r\n//     const opts = vm.$options // 获取所有选项\r\n//     // if(opts.props) {\r\n//     //     initData();\r\n//     // }\r\n//     if(opts.data) {\r\n//         initData(vm)\r\n//     }\r\n\r\n// }\r\n// function initData(vm) {\r\n//     // data函数、对象。vue3里面觉得data就是个函数\r\n//     let data = vm.$options.data;\r\n//     data = typeof data === 'function' ? data.call(vm): data;\r\n//     debugger\r\n//     console.log(data)\r\n// }","// export const a = 100;\r\n// export default {a:1}\r\nimport { compileToFunction } from './compiler'\r\nimport { initGlobalApi } from './globalApi'\r\nimport { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport Watcher, { nextTick } from './observe/watcher'\r\nimport { initStateMixin } from './state'\r\nimport { createElm, patch } from './vdom/patch'\r\n// 将所有的方法耦合在一起\r\nfunction Vue(options) { // options就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue) // 扩展了init方法\r\ninitLifeCycle(Vue) // vm_update vm._render\r\ninitGlobalApi(Vue) // 全局api的实现\r\ninitStateMixin(Vue); // 实现了nextTick $watch\r\n\r\n// ----------为了方便观察前后的虚拟节点--测试的--------------\r\n\r\nlet render1 = compileToFunction(`<li key=\"a\" style=\"color:red\">{{name}}</li>`)\r\nlet vm1 = new Vue({data: {name: 'zf'}})\r\nlet preVnode = render1.call(vm1)\r\n\r\nlet el = createElm(preVnode);\r\n\r\ndocument.body.appendChild(el);\r\n\r\n// 如果用户自己操作dom，可能会有些问题\r\nlet render2 = compileToFunction(`<li key=\"a\" style=\"color:red; background:blue\">{{name}}</li>`)\r\nlet vm2 = new Vue({data: {name: 'zs'}})\r\nlet nextVnode = render2.call(vm2)\r\n\r\n// 不要直接替换，比较区别再替换\r\n// diff算法是一个平级比较的过程，父亲和父亲比对，儿子和儿子比对\r\n//let newEl = createElm(nextVnode);\r\n//el.parentNode.replaceChild(newEl,el);\r\n\r\n//console.log(preVnode)\r\n\r\npatch(preVnode, nextVnode)\r\n\r\n\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","el","map","child","ast","code","compileToFunction","templete","render","Function","strats","LIFECYCLE","hook","p","c","concat","mergeOptions","options","mergeField","hasOwnProperty","initGlobalApi","Vue","mixin","id","Dep","sub","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","addSub","call","depend","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","console","log","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","createElementVNode","data","kye","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newEle","insertBefore","nextSibling","removeChild","replaceChild","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","mountComponent","updateComponent","callHook","handlers","handler","Observe","walk","Object","keys","defineReactive","observe","defineProperty","set","notify","initState","opts","initData","computed","initComputed","watch","initWatch","Array","isArray","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","vm1","preVnode","body","render2","vm2","nextVnode"],"mappings":"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"}